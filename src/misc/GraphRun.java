package misc;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class GraphRun {
	static int[] cityDistance;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {9,1,4,9, 0, 4, 8, 9, 0, 1,9,8,9,3,4,4,7,5,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9,2,3,4,6,8,0,8,7,5,4,3,4,5,6,7,3,1,3,4,5,6,7,8,3,2,1,3,4,5,7,8,3,9};
		int start = 0; 
		cityDistance = new int [arr.length];
		HashMap <Integer,List<Integer>> lstmap = new HashMap<Integer,List<Integer>>();
		for(int i=0;i<arr.length;i++)
		{
			if(i==arr[i])
			{
				start = i;
			}
			else
			{
				if(lstmap.containsKey(arr[i]))
				{
					lstmap.get(arr[i]).add(i);
				}
				else
				{
					List<Integer> lstInt = new ArrayList<Integer>();
					lstInt.add(i);
					lstmap.put(arr[i], lstInt);
				}
			}
			
			
		}
		System.out.println(lstmap.toString());
		/*for(int i =0;i<lstmap.get(start).size();i++)
		{
			for(int j =0;j<lstmap.get(lstmap.get(start).get(i)).size();j++)
			{
				System.out.println(lstmap.get(lstmap.get(start).get(i)).get(j));
			}
		}*/
		traverseList(lstmap,start,0);
		System.out.println(cityDistance);
		
		for (Integer elem : cityDistance) {
			System.out.println(elem);
		}
		
	}
	
	public static void traverseList(HashMap <Integer,List<Integer>> lstmap,int value,int depth)
	{
		if(lstmap.containsKey(value))
			{
				for (Integer elem : lstmap.get(value)) {
					cityDistance[depth] = cityDistance[depth]+1;
					traverseList(lstmap,elem,depth+1);
				}
			}
		else
		{
			return;
		}
		
	}

}
